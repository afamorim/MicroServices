buildscript {
	dependencies {
		classpath 'io.swagger.codegen.v3:swagger-codegen-cli:3.0.5'
	}
	repositories {
		mavenLocal()
	}
}

plugins {
	id 'org.springframework.boot' version '2.1.5.RELEASE'
	id 'java'
	id 'idea'
	id 'eclipse'
	//id 'io.franzbecker.gradle.lombok' version '1.11'
}

apply plugin: 'io.spring.dependency-management'

group = 'br.com.vortice.microservicos'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	mavenLocal()
}

apply from: 'swagger.gradle'

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'

	compile 'io.springfox:springfox-swagger2:2.8.0'
	compile 'io.springfox:springfox-swagger-ui:2.8.0'

	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

}

sourceSets {

	generated{
		java.srcDir "${buildDir}/build/code-gen/src/main/java"
		compileClasspath = main.compileClasspath
		runtimeClasspath += main.runtimeClasspath
	}
	main {
		compileClasspath += generated.output
		runtimeClasspath += generated.output
	}
	test {
		compileClasspath += generated.output
		runtimeClasspath += generated.output
	}
}

compileJava.dependsOn generateServer